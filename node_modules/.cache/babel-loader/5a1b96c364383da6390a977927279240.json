{"ast":null,"code":"var _jsxFileName = \"/home/chris/Dev/coding-challenge/src/App.js\";\nimport React from \"react\";\n\nconst data = require(\"../src/data.json\");\n\nconst names = data.reduce((accumulator, currentValue) => {\n  if (accumulator.indexOf(currentValue.name) === -1) {\n    accumulator.push(currentValue.name);\n  }\n\n  return accumulator;\n}, []);\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\"\n    };\n\n    this.calculatePoints = amount => {\n      if (amount > 50 && amount < 100) {\n        let points = Math.floor(amount) - 50;\n        return points;\n      }\n\n      if (amount > 100) {\n        let points = (Math.floor(amount) - 100) * 2 + 50;\n        return points;\n      } else {\n        return 0;\n      }\n    };\n\n    this.totalPoints = data => {\n      let total = 0;\n\n      for (let i in data) {\n        if (data[i].name === this.state.name) {\n          console.log(this.calculatePoints(data[i].transaction));\n          let points = this.calculatePoints(data[i].transaction);\n          total = total + points;\n        }\n      }\n\n      return total;\n    };\n\n    this.onChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      list: \"names\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"names\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, names.map(name => React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, name))), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name:\", this.state.name), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Points:\", this.totalPoints(data)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chris/Dev/coding-challenge/src/App.js"],"names":["React","data","require","names","reduce","accumulator","currentValue","indexOf","name","push","App","Component","state","calculatePoints","amount","points","Math","floor","totalPoints","total","i","console","log","transaction","onChange","e","setState","target","value","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AAEA,MAAMC,KAAK,GAAGF,IAAI,CAACG,MAAL,CAAY,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACvD,MAAID,WAAW,CAACE,OAAZ,CAAoBD,YAAY,CAACE,IAAjC,MAA2C,CAAC,CAAhD,EAAmD;AACjDH,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,YAAY,CAACE,IAA9B;AACD;;AACD,SAAOH,WAAP;AACD,CALa,EAKX,EALW,CAAd;;AAOA,MAAMK,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNJ,MAAAA,IAAI,EAAE;AADA,KADwB;;AAAA,SAKhCK,eALgC,GAKdC,MAAM,IAAI;AAC1B,UAAIA,MAAM,GAAG,EAAT,IAAeA,MAAM,GAAG,GAA5B,EAAiC;AAC/B,YAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAX,IAAqB,EAAlC;AACA,eAAOC,MAAP;AACD;;AACD,UAAID,MAAM,GAAG,GAAb,EAAkB;AAChB,YAAIC,MAAM,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWH,MAAX,IAAqB,GAAtB,IAA6B,CAA7B,GAAiC,EAA9C;AACA,eAAOC,MAAP;AACD,OAHD,MAGO;AACL,eAAO,CAAP;AACD;AACF,KAhB+B;;AAAA,SAkBhCG,WAlBgC,GAkBlBjB,IAAI,IAAI;AACpB,UAAIkB,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,CAAT,IAAcnB,IAAd,EAAoB;AAClB,YAAIA,IAAI,CAACmB,CAAD,CAAJ,CAAQZ,IAAR,KAAiB,KAAKI,KAAL,CAAWJ,IAAhC,EAAsC;AACpCa,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,eAAL,CAAqBZ,IAAI,CAACmB,CAAD,CAAJ,CAAQG,WAA7B,CAAZ;AACA,cAAIR,MAAM,GAAG,KAAKF,eAAL,CAAqBZ,IAAI,CAACmB,CAAD,CAAJ,CAAQG,WAA7B,CAAb;AACAJ,UAAAA,KAAK,GAAGA,KAAK,GAAGJ,MAAhB;AACD;AACF;;AACD,aAAOI,KAAP;AACD,KA5B+B;;AAAA,SA8BhCK,QA9BgC,GA8BrBC,CAAC,IAAI;AACd,WAAKC,QAAL,CAAc;AAAElB,QAAAA,IAAI,EAAEiB,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACD,KAhC+B;AAAA;;AAkChCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,IAAI,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAE,KAAKL,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,KAAK,CAAC2B,GAAN,CAAUtB,IAAI,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,IAAT,CADD,CADH,CAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU,KAAKI,KAAL,CAAWJ,IAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAY,KAAKU,WAAL,CAAiBjB,IAAjB,CAAZ,CAFF,CADF,CARF,CADF;AAiBD;;AApD+B;;AAuDlC,eAAeS,GAAf","sourcesContent":["import React from \"react\";\n\nconst data = require(\"../src/data.json\");\n\nconst names = data.reduce((accumulator, currentValue) => {\n  if (accumulator.indexOf(currentValue.name) === -1) {\n    accumulator.push(currentValue.name);\n  }\n  return accumulator;\n}, []);\n\nclass App extends React.Component {\n  state = {\n    name: \"\"\n  };\n\n  calculatePoints = amount => {\n    if (amount > 50 && amount < 100) {\n      let points = Math.floor(amount) - 50;\n      return points;\n    }\n    if (amount > 100) {\n      let points = (Math.floor(amount) - 100) * 2 + 50;\n      return points;\n    } else {\n      return 0;\n    }\n  };\n\n  totalPoints = data => {\n    let total = 0;\n    for (let i in data) {\n      if (data[i].name === this.state.name) {\n        console.log(this.calculatePoints(data[i].transaction));\n        let points = this.calculatePoints(data[i].transaction);\n        total = total + points;\n      }\n    }\n    return total;\n  };\n\n  onChange = e => {\n    this.setState({ name: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <label>Customer Name</label>\n        <input type=\"text\" name=\"name\" list=\"names\" onChange={this.onChange} />\n        <datalist id=\"names\">\n          {names.map(name => (\n            <option>{name}</option>\n          ))}\n        </datalist>\n        <table>\n          <tr>\n            <th>Name:{this.state.name}</th>\n            <th>Points:{this.totalPoints(data)}</th>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}